/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * } 
 
 */
class Solution {
    public int maxLevelSum(TreeNode root) {
        Queue<TreeNode> myqueue=new LinkedList<>();
        myqueue.add(root);
        int level=0;
        int maxLevel=Integer.MIN_VALUE;
        int maxLevelSum=Integer.MIN_VALUE;
        while(myqueue.size()>0)
        {
            level++;
            int sum=0;
            int currentLevelSize=myqueue.size();
            
            for(int i=0;i<currentLevelSize;i++){
                TreeNode mynode=myqueue.poll();
                sum=sum+mynode.val;
                if(mynode.left!=null){
                    myqueue.add(mynode.left);
                }            
                if(mynode.right!=null){
                    myqueue.add(mynode.right);
                }
                
            }
            if(sum>maxLevelSum){
                maxLevel=level;
                maxLevelSum=sum;
            }
            
            
            
            
        }
                    return maxLevel;

        
        
    }
}
